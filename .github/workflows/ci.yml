name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  build-test:
    name: build test ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: linux x86-64
            os: ubuntu-latest
          - name: windows x86-64
            os: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest
      - name: nextest archive
        run: cargo nextest archive --workspace --all-features --cargo-profile ci --archive-file 'nextest-archive-${{ matrix.platform.os }}.tar.zst'
      - uses: actions/upload-artifact@v4
        with:
          name: nextest-archive-${{ matrix.platform.os }}
          path: nextest-archive-${{ matrix.platform.os }}.tar.zst

  test:
    name: test ${{ matrix.platform.name }} ${{ matrix.partition }}/8
    runs-on: ${{ matrix.platform.os }}
    needs:
      - build-test
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: linux x86-64
            os: ubuntu-latest
          - name: windows x86-64
            os: windows-latest
        partition: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@nextest
      - uses: actions/download-artifact@v4
        with:
          name: nextest-archive-${{ matrix.platform.os }}
      - name: nextest partition ${{ matrix.partition }}/8
        run: cargo nextest run --partition 'count:${{ matrix.partition }}/8' --archive-file 'nextest-archive-${{ matrix.platform.os }}.tar.zst'

  scarb-metadata-compatibility:
    name: scarb-metadata compatibility check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "2.3.0"
      - run: echo "SCARB_TEST_BIN=$(which scarb)" >> $GITHUB_ENV
      - name: run tests
        run: cargo test -p scarb-metadata

  check-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --check
      - run: cargo clippy --all-targets --all-features -- --no-deps
        env:
          # Make sure CI fails on all warnings, including Clippy lints.
          RUSTFLAGS: "-Dwarnings"
      - run: cargo doc --all-features --no-deps
        env:
          # Make sure CI fails on all warnings, including Clippy lints.
          RUSTDOCFLAGS: "-Dwarnings"

  check-website:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./website
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: npm
          cache-dependency-path: website/package-lock.json
      - run: npm ci
      - run: npm run fmt:check
