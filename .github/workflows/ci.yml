name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    name: build test ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: linux x86-64
            os: ubuntu-latest
          # - name: macos x86-64
          #   os: macos-latest
          - name: windows x86-64
            os: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest
      - name: nextest archive
        run: cargo nextest archive --workspace --all-features --cargo-profile ci --archive-file 'nextest-archive-${{ matrix.platform.os }}.tar.zst'
      - uses: actions/upload-artifact@v3
        with:
          name: nextest-archive-${{ matrix.platform.os }}
          path: nextest-archive-${{ matrix.platform.os }}.tar.zst

  test:
    name: test ${{ matrix.platform.name }} ${{ matrix.partition }}/4
    runs-on: ${{ matrix.platform.os }}
    needs: build-test
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: linux x86-64
            os: ubuntu-latest
          # - name: macos x86-64
          #   os: macos-latest
          - name: windows x86-64
            os: windows-latest
        partition: [ 1, 2, 3, 4 ]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@nextest
      - uses: actions/download-artifact@v3
        with:
          name: nextest-archive-${{ matrix.platform.os }}
      - name: nextest partition ${{ matrix.partition }}/4
        run: cargo nextest run --partition 'count:${{ matrix.partition }}/4' --archive-file 'nextest-archive-${{ matrix.platform.os }}.tar.zst'

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    env:
      # Make sure CI fails on all warnings, including Clippy lints.
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets --all-features -- --no-deps

  rustdoc:
    runs-on: ubuntu-latest
    env:
      # Make sure CI fails on all warnings, including Clippy lints.
      RUSTDOCFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --all-features --no-deps
