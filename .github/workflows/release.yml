name: Release

on:
  push:
    tags: [ "v*" ]

permissions:
  contents: write

jobs:
  create-release:
    name: draft github release
    runs-on: ubuntu-latest
    steps:
      - name: Draft GitHub release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          prerelease: ${{ contains(github.ref_name, '-') }}

  build:
    name: build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: [ "create-release" ]
    continue-on-error: true

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
            cross: false

          #- target: x86_64-unknown-linux-musl
          #  os: ubuntu-latest
          #  cross: true

          #- target: armv7-unknown-linux-gnueabihf
          #  os: ubuntu-20.04
          #  cross: true

          #- target: aarch64-unknown-linux-gnu
          #  os: ubuntu-20.04
          #  cross: true

          - target: x86_64-apple-darwin
            os: macos-latest
            cross: false

          - target: aarch64-apple-darwin
            os: macos-latest
            cross: true

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false

          #- target: aarch64-pc-windows-msvc
          #  os: windows-latest
          #  cross: true

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --locked --target ${{ matrix.target }}

      - name: package
        shell: bash
        run: |
          set -euxo pipefail
          
          STAGING="scarb-${{ github.ref_name }}-${{ matrix.target }}"
          echo "STAGING=$STAGING" >> $GITHUB_ENV
          mkdir -p "$STAGING"
          
          ext=""
          [[ "${{ matrix.target }}" == *-windows-* ]] && ext=".exe"
          
          for crate in "scarb"; do
            cp "target/${{ matrix.target }}/release/${crate}${ext}" "$STAGING/"
          done
          
          cp -r README.md LICENSE "$STAGING/"

      - name: archive (tar)
        if: "! contains(matrix.target, '-windows-')"
        shell: bash
        run: |
          set -euxo pipefail
          tar czvf "${{ env.STAGING }}.tar.gz" "${{ env.STAGING }}"

      - name: archive (zip)
        if: "contains(matrix.target, '-windows-')"
        shell: bash
        run: |
          set -euxo pipefail
          7z a "${{ env.STAGING }}.zip" "${{ env.STAGING }}"

      - name: upload
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.STAGING }}.tar.gz
            ${{ env.STAGING }}.zip
